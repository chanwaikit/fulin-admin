{"version":3,"sources":["utils/callApi.js","routes/amazon-ppt/index.js"],"names":["noop","apiBase","window","location","origin","callApi","custom","api","type","data","success","error","Promise","resolve","reject","request","timeout","withCredentials","send","end","err","res","ok","console","log","stringifiedBigNumber","text","replace","body","JSON","parse","response","moment","Date","getTime","format","Logon","state","download","values","link","num","picName","number","Number","i","setTimeout","img","Image","setAttribute","onload","context","canvas","document","createElement","getContext","width","height","drawImage","url","toDataURL","event","a","MouseEvent","href","dispatchEvent","src","String","now","parseInt","this","spinning","tableData","className","name","wrapperCol","span","initialValues","onFinish","autoComplete","Item","label","rules","required","message","placeholder","htmlType","PureComponent","Component"],"mappings":"2FAOa,SAAPA,KAPN,0CAQMC,EAAO,UAAMC,OAAOC,SAASC,OAAtB,QAoDEC,IAlDC,SAAC,GAOV,IAAD,EANJC,YAMI,IANJA,SAMI,EALJC,YAKI,IALJA,KAAM,GAKF,EAJJC,YAII,IAJJA,MAAO,OAIH,EAHJC,YAGI,IAHJA,MAAO,GAGH,EAFJC,YAEI,IAFJA,SAAUV,EAEN,EADJW,YACI,IADJA,OAAQX,EACJ,EACJ,OAAO,IAAIY,SAAQ,SAACC,EAASC,GAC3BC,IAAQP,EAAMF,EAAO,GAAD,OAAIC,GAAMN,EAAUM,GACrCS,QAAQ,KAERR,KAAK,oBACLS,kBAEAC,KAAKT,GACLU,KAAI,SAACC,EAAKC,GACLD,IAAQC,EAAIC,IAEdC,QAAQC,IAAR,4BAAiCJ,IACjCT,EAAMS,GACNN,EAAOM,KAkBDK,EAAuBJ,EAAIK,KAAKC,QAClC,sBACA,YAEEC,EAAOC,KAAKC,MAAML,GACxBf,EAAQkB,EAAKG,mB,8NC/CJC,SAAWC,MAAOC,UAAY,SAA0BC,OAAO,cACjEH,SAAWC,MAAOC,UAAY,QAAyBC,OAAO,cAEzEC,E,4MACJC,MAAQ,G,EA2BRC,SAAW,SAACC,GAGX,IAFA,IAAOC,YAAP,EAA6CD,EAAtCC,MAAO,GAAd,IAA6CD,EAA3BE,IAAWC,YAA7B,EAA6CH,EAAhBG,SAAU,GAAvC,EACMC,EAASC,YAAOA,IADtB,EAAwB,IAAxB,GAESC,EAAI,EAAGA,GAAKF,EAAS,EAAGE,KAHX,SAGbA,GACRC,YAAW,WACV,IAAIC,EAAM,IAAIC,MACdD,EAAIE,aAAa,cAAe,aAChCF,EAAIG,OAAS,WACZ,IACIC,GADAC,EAASC,SAASC,cAAc,WACfC,WAAW,MAChCH,EAAOI,MAAQT,EAAIS,MACnBJ,EAAOK,OAASV,EAAIU,OACpBN,EAAQO,UAAUX,EAAK,EAAG,EAAGA,EAAIS,MAAOT,EAAIU,QAC5C,IAAIE,EAAMP,EAAOQ,UAAU,cAEvBC,GADAC,EAAIT,SAASC,cAAc,KACnB,IAAIS,WAAW,UAC3BD,EAAExB,SAAWI,EAAUG,EAAI,WAC3BiB,EAAEE,KAAOL,EACTG,EAAEG,cAAcJ,IAEjBd,EAAImB,IAAM1B,EAAO,IAAM2B,OAAOtB,GAAK,UAAYZ,KAAKmC,QAC/B,IAAnBC,SAASxB,EAAI,KArBK,CAGbA,I,uDA1BV,c,oBA4EA,WACC,MAAmCyB,KAAKjC,MAExC,OAFA,EAAOkC,SAAP,EAAiBC,UAEV,yBAAKC,UAAU,cAMrB,uBACCC,KAAK,QAILC,WAAY,CACXC,KAAM,IAEPC,cAAe,GAGfC,SAAUR,KAAKhC,SAEfyC,aAAa,OAEb,sBAAMC,KAAN,CACCC,MAAM,eACNP,KAAK,OACLQ,MAAO,CACN,CACCC,UAASA,EACTC,QAAS,wBAIX,uBAAOC,YAAY,gDAoBpB,sBAAML,KAAN,CACCC,MAAM,iCACNP,KAAK,UACLC,WAAY,CAEXC,KAAM,GAEPM,MAAO,CACN,CACCC,UAASA,EACTC,QAAS,2BAIX,uBAAOC,YAAY,sDAGpB,sBAAML,KAAN,KAMC,uBAAQxE,KAAK,UAAU8E,SAAS,UAAhC,uB,GA9JeC,iBAAiBC,aAsKvBpD","file":"static/js/14.9d8e4bb1.chunk.js","sourcesContent":["/* eslint-disable */\nimport each from 'lodash/each';\nimport isArray from 'lodash/isArray';\nimport isPlainObject from 'lodash/isPlainObject';\n\nimport request from 'superagent';\n\nconst noop = () => {};\nconst apiBase = `${window.location.origin}/api`;\n\nconst callApi = ({\n  custom = false,\n  api = '',\n  type = 'POST',\n  data = {},\n  success = noop,\n  error = noop\n}) => {\n  return new Promise((resolve, reject) => {\n    request(type, custom?`${api}`:apiBase + api)\n      .timeout(200000)\n      // .type('form')\n      .type('application/json')\n      .withCredentials()\n      // .send(toFlattenMap(data))\n      .send(data)\n      .end((err, res) => {\n        if (err || !res.ok) {\n          // not alert, console log\n          console.log(`not 200 error msg:${err}`);\n          error(err);\n          reject(err);\n        } else {\n          // http res code is 200\n          // if (res.body.errorCode === 200) {\n          //   // normal\n          //   const stringifiedBigNumber = res.text.replace(\n          //     /([^\\\\])\":(\\d{15,})/g,\n          //     '$1\":\"$2\"'\n          //   );\n          //   const body = JSON.parse(stringifiedBigNumber);\n          //   success(body.response);\n          //   resolve(body.response);\n          // } else if (error) {\n          //   error(res.body);\n          //   reject(res.body);\n          // } else {\n          //   console.warn(res.body.errorDescription);\n          // }\n          const stringifiedBigNumber = res.text.replace(\n              /([^\\\\])\":(\\d{15,})/g,\n              '$1\":\"$2\"'\n            );\n          const body = JSON.parse(stringifiedBigNumber);\n          success(body.response);\n        }\n      });\n  });\n};\n\nexport default callApi;\n\nfunction prepend(prefix, name, separator) {\n  if (prefix) {\n    if (separator) {\n      return `${prefix}.${name}`;\n    }\n    return prefix + name;\n  }\n  return name;\n}\n\nfunction flatten(prefix, obj, map) {\n  if (obj) {\n    if (isArray(obj)) {\n      for (let i = 0; i < obj.length; i++) {\n        const item = obj[i];\n        flatten(prepend(prefix, `[${i}]`, false), item, map);\n      }\n    } else if (isPlainObject(obj)) {\n      if (obj.__type__ === 'map') {\n        each(obj, function (propertyObject, propertyName) {\n          if (propertyName !== '__type__') {\n            flatten(\n              prepend(prefix, `[${propertyName}]`, false),\n              propertyObject,\n              map\n            );\n          }\n        });\n      } else {\n        each(obj, function (propertyObject, propertyName) {\n          flatten(prepend(prefix, propertyName, true), propertyObject, map);\n        });\n      }\n    } else {\n      map[prefix] = obj;\n    }\n  }\n}\n\nfunction toFlattenMap(obj) {\n  const map = {};\n\n  flatten(null, obj, map);\n  return map;\n}\n","//框架依赖\nimport React, {Component, PureComponent} from 'react';\nimport { Form, Input, Button, Spin } from 'antd';\nimport callApi from 'utils/callApi';\nimport moment from 'moment';\nimport './index.less';\n\nconst dayStartMs = moment(new Date().getTime() - 14 * 24 * 60 * 60 * 1000).format('YYYY-MM-DD');\nconst dayEndMs = moment(new Date().getTime() - 7 * 24 * 60 * 60 * 1000).format('YYYY-MM-DD');\n\nclass Logon extends (PureComponent || Component) {\n  state = {\n\n  }\n\n  componentDidMount () {\n\n  }\n\n  // download (link, picName) {\n  // \tlet img = new Image();\n  // \timg.setAttribute('crossOrigin', 'Anonymous');\n  // \timg.onload = function () {\n  // \t\tlet canvas = document.createElement('canvas');\n  // \t\tlet context = canvas.getContext('2d');\n  // \t\tcanvas.width = img.width;\n  // \t\tcanvas.height = img.height;\n  // \t\tcontext.drawImage(img, 0, 0, img.width, img.height);\n  // \t\tlet url = canvas.toDataURL('images/png');\n  // \t\tlet a = document.createElement('a');\n  // \t\tlet event = new MouseEvent('click');\n  // \t\ta.download = picName || 'default.png';\n  // \t\ta.href = url;\n  // \t\ta.dispatchEvent(event);\n  // \t};\n  // \timg.src = link + '?v=' + Date.now();\n  // }\n\n  download = (values) => {\n  \tconst {link = '', num = 100, picName = ''} = values;\n  \tconst number = Number(num);\n  \tfor (let i = 1; i <= number + 1; i++) {\n  \t\tsetTimeout(() => {\n  \t\t\tlet img = new Image();\n  \t\t\timg.setAttribute('crossOrigin', 'Anonymous');\n  \t\t\timg.onload = function () {\n  \t\t\t\tlet canvas = document.createElement('canvas');\n  \t\t\t\tlet context = canvas.getContext('2d');\n  \t\t\t\tcanvas.width = img.width;\n  \t\t\t\tcanvas.height = img.height;\n  \t\t\t\tcontext.drawImage(img, 0, 0, img.width, img.height);\n  \t\t\t\tlet url = canvas.toDataURL('images/png');\n  \t\t\t\tlet a = document.createElement('a');\n  \t\t\t\tlet event = new MouseEvent('click');\n  \t\t\t\ta.download = picName + i + '.png' || 'default.png';\n  \t\t\t\ta.href = url;\n  \t\t\t\ta.dispatchEvent(event);\n  \t\t\t};\n  \t\t\timg.src = link + '/' + String(i) + '.jpg?v=' + Date.now();\n  \t\t}, parseInt(i / 10) * 30000);\n  \t}\n  }\n\n  // download = (values) => {\n  // \tconst {link = '', num = 54, picName = ''} = values;\n  // \tconst number = Number(num);\n  // \tlet array = [];\n  // \tfor (let i = 11; i <= number + 1; i++) {\n  // \t\tarray.push(i);\n  // \t\t\tlet img = new Image();\n  // \t\timg.setAttribute('crossOrigin', 'Anonymous');\n  // \t\timg.onload = function () {\n  // \t\t\tlet canvas = document.createElement('canvas');\n  // \t\t\tlet context = canvas.getContext('2d');\n  // \t\t\tcanvas.width = img.width;\n  // \t\t\tcanvas.height = img.height;\n  // \t\t\tcontext.drawImage(img, 0, 0, img.width, img.height);\n  // \t\t\tcanvas.toBlob(blob => {\n  // \t\t\t\tlet url = URL.createObjectURL(blob);\n  // \t\t\t\tlet a = document.createElement('a');\n  // \t\t\t\tlet event = new MouseEvent('click');\n  // \t\t\t\ta.download = picName + i + '.png' || 'default.png';\n  // \t\t\t\ta.href = url;\n  // \t\t\t\ta.dispatchEvent(event);\n  // \t\t\t\tURL.revokeObjectURL(url);  // 内存管理,将这句代码注释掉,则将以 blob:http 开头的url复制到浏览器地址栏有效,否则无效.\n  // \t\t\t});\n  // \t\t};\n  // \t\timg.src = link + '/' + String(i) + '.jpg?v=' + Date.now();\n  // \t}\n  // }\n\n  render () {\n  \tconst {spinning, tableData = []} = this.state;\n\n  \treturn <div className=\"sku-remark\">\n\n  \t\t{/* <Button onClick={() => {\n  \t\t\tthis.download('https://cnstatic01.e.vhall.com/document/d81b0615ef52420328c03dabddac6123/8.jpg', 'abc.jpg');\n  \t\t}}>下载图片</Button> */}\n\n  \t\t<Form\n  \t\t\tname=\"basic\"\n  \t\t\t// labelCol={{\n  \t\t\t// \tspan: 8,\n  \t\t\t// }}\n  \t\t\twrapperCol={{\n  \t\t\t\tspan: 12,\n  \t\t\t}}\n  \t\t\tinitialValues={{\n  \t\t\t\t// remember: true,\n  \t\t\t}}\n  \t\t\tonFinish={this.download}\n  \t\t\t// onFinishFailed={onFinishFailed}\n  \t\t\tautoComplete=\"off\"\n  \t\t>\n  \t\t\t<Form.Item\n  \t\t\t\tlabel=\"网站\"\n  \t\t\t\tname=\"link\"\n  \t\t\t\trules={[\n  \t\t\t\t\t{\n  \t\t\t\t\t\trequired: true,\n  \t\t\t\t\t\tmessage: 'Please input link!',\n  \t\t\t\t\t},\n  \t\t\t\t]}\n  \t\t\t>\n  \t\t\t\t<Input placeholder=\"请输入网站前缀\"/>\n  \t\t\t</Form.Item>\n\n  \t\t\t{/* <Form.Item\n  \t\t\t\twrapperCol={{\n  \t\t\t\t\t// offset: 8,\n  \t\t\t\t\tspan: 4,\n  \t\t\t\t}}\n  \t\t\t\tlabel=\"数量\"\n  \t\t\t\tname=\"num\"\n  \t\t\t\trules={[\n  \t\t\t\t\t{\n  \t\t\t\t\t\trequired: true,\n  \t\t\t\t\t\tmessage: 'Please input num!',\n  \t\t\t\t\t},\n  \t\t\t\t]}\n  \t\t\t>\n  \t\t\t\t<Input placeholder=\"请输入页码\"/>\n  \t\t\t</Form.Item> */}\n\n  \t\t\t<Form.Item\n  \t\t\t\tlabel=\"导出的名称\"\n  \t\t\t\tname=\"picName\"\n  \t\t\t\twrapperCol={{\n  \t\t\t\t\t// offset: 8,\n  \t\t\t\t\tspan: 6,\n  \t\t\t\t}}\n  \t\t\t\trules={[\n  \t\t\t\t\t{\n  \t\t\t\t\t\trequired: true,\n  \t\t\t\t\t\tmessage: 'Please input picName!',\n  \t\t\t\t\t},\n  \t\t\t\t]}\n  \t\t\t>\n  \t\t\t\t<Input placeholder=\"请输入导出的名称\"/>\n  \t\t\t</Form.Item>\n\n  \t\t\t<Form.Item\n  \t\t\t\t// wrapperCol={{\n  \t\t\t\t// \toffset: 8,\n  \t\t\t\t// \tspan: 16,\n  \t\t\t\t// }}\n  \t\t\t>\n  \t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n            提交\n  \t\t\t\t</Button>\n  \t\t\t</Form.Item>\n  \t\t</Form>\n  \t</div>;\n  }\n}\nexport default Logon;\n"],"sourceRoot":""}